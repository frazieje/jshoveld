group 'com.spoohapps.jble6lowpanshoveld'
version '0.1'

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-daemon', name: 'commons-daemon', version: '1.0.15'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    testCompile("junit:junit:4.12")
    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.2")

    testRuntime("org.junit.platform:junit-platform-launcher:1.0.2")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.2")
    testRuntime("org.junit.vintage:junit-vintage-engine:4.12.2")
}

task copyToLib(type: Copy) {
    into "$buildDir/output/libs"
    from configurations.runtime
}

task generateInitScript {
    def template_vars = [install_path: "$projectDir"]
    def java_home = System.env.'JAVA_HOME'
    def template = file('init.template')
    def tag = /<%.*%>/
    def matches = (template.text =~ /$tag/)
    def sb = new StringBuffer()
    def i = 0
    while (matches.find()) {
        matches.appendReplacement(sb, template_vars.get(matches[i].substring(2, matches[i].length()-2).trim()))
    }
    matches.appendTail(sb)
    new File("$buildDir").mkdir()
    new File("$buildDir/output").mkdir()
    new File("$buildDir/output/init").mkdir()
    if (java_home?.trim()) {
        new File("$buildDir/output/init/jble6lowpanshoveld") << sb.toString()
    } else {
        println "JAVA_HOME is not set. Please set JAVA_HOME and try again"
    }
}

build.dependsOn(copyToLib)
